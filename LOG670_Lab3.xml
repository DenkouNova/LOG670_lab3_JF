<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

const int NVAA = 1;         // nombre de voitures du cote A (direction -&gt;)
const int NVAB = 1;         // nombre de voitures du cote B (direction &lt;-)

typedef int[0, NVAA-1] idVoitureA;
typedef int[0, NVAB-1] idVoitureB;

chan demandeA[NVAA], demandeB[NVAB], goA[NVAA], goB[NVAB], pontDirectionA, pontDirectionB, changerDirection, voitureSurPont, voitureQuitterPont;

idVoitureA listeVoituresA[NVAA];
</declaration><template><name x="5" y="5">CRTLP</name><declaration>// Place local declarations here.

const int NOMBRE_DAUTOS_A_PASSER = 20; // apres ce nombre de voitures on change de direction
const int TEMPS_MAX  = 200; // apres ce nombre de ticks on change de direction

clock x;

int nombreDautosPassees = 0;

// =========================================
// || declarations pour voiture A         ||
// =========================================


int[0,NVAA] longueurFileA;

// Placer element a la fin de la file A
void enfilerA(idVoitureA element)
{
        listeVoituresA[longueurFileA++] = element;
}

// Enlever le premier element de la file
void defilerA()
{
        int i = 0;
        longueurFileA -= 1;
        while (i &lt; longueurFileA)
        {
                listeVoituresA[i] = listeVoituresA[i + 1];
                i++;
        }
        listeVoituresA[i] = 0;
}

// Retourne le premier element de la file A
idVoitureA avantA()
{
   return listeVoituresA[0];
}

// Retourne le dernier element de la file A
idVoitureA arriereA()
{
   return listeVoituresA[longueurFileA - 1];
}



// =========================================
// || declarations pour voiture B         ||
// =========================================

// declarations pour voiture B
idVoitureB listeVoituresB[NVAB];
int[0,NVAB] longueurFileB;

// Placer element a la fin de la file B
void enfilerB(idVoitureB element)
{
        listeVoituresB[longueurFileB++] = element;
}

// Enlever le premier element de la file
void defilerB()
{
        int i = 0;
        longueurFileB -= 1;
        while (i &lt; longueurFileB)
        {
                listeVoituresB[i] = listeVoituresB[i + 1];
                i++;
        }
        listeVoituresB[i] = 0;
}

// Retourne le premier element de la file B
idVoitureB avantB()
{
   return listeVoituresB[0];
}

// Retourne le dernier element de la file B
idVoitureB arriereB()
{
   return listeVoituresB[longueurFileB - 1];
}



</declaration><location id="id0" x="-328" y="-1240"><committed/></location><location id="id1" x="-328" y="-840"><name x="-312" y="-856">VoitureAEnRoute</name><committed/></location><location id="id2" x="-328" y="-1040"><label kind="invariant" x="-296" y="-1072">nombreDautosPassees &lt;= NOMBRE_DAUTOS_A_PASSER &amp;&amp;
x &lt;= TEMPS_MAX</label></location><init ref="id2"/><transition><source ref="id2"/><target ref="id2"/><label kind="guard" x="-864" y="-1072">nombreDautosPassees &gt;= NOMBRE_DAUTOS_A_PASSER ||
x &gt;= TEMPS_MAX</label><label kind="synchronisation" x="-592" y="-1056">changerDirection!</label><label kind="assignment" x="-656" y="-1040">nombreDautosPassees := 0,
x := 0</label><nail x="-472" y="-1072"/><nail x="-472" y="-1016"/></transition><transition><source ref="id0"/><target ref="id2"/><label kind="select" x="-600" y="-1173">e:idVoitureB</label><label kind="guard" x="-600" y="-1158">e==avantB()</label><label kind="synchronisation" x="-600" y="-1143">goB[e]!</label><label kind="assignment" x="-600" y="-1128">defilerB(),
nombreDautosPassees += 1</label><nail x="-408" y="-1240"/><nail x="-408" y="-1104"/></transition><transition><source ref="id2"/><target ref="id0"/><label kind="select" x="-312" y="-1232">e:idVoitureB</label><label kind="guard" x="-312" y="-1216">longueurFileB&gt;0 &amp;&amp; e==avantB() &amp;&amp; 
nombreDautosPassees &lt; NOMBRE_DAUTOS_A_PASSER &amp;&amp;
x &lt; TEMPS_MAX</label><label kind="synchronisation" x="-312" y="-1168">pontDirectionB?</label><nail x="-328" y="-1056"/></transition><transition><source ref="id2"/><target ref="id2"/><label kind="select" x="-192" y="-1136">e:idVoitureB</label><label kind="synchronisation" x="-192" y="-1120">demandeB[e]?</label><label kind="assignment" x="-192" y="-1104">enfilerB(e)</label><nail x="-296" y="-1072"/><nail x="-200" y="-1072"/><nail x="-200" y="-1128"/><nail x="-296" y="-1128"/></transition><transition><source ref="id1"/><target ref="id2"/><label kind="select" x="-528" y="-894">e:idVoitureA</label><label kind="guard" x="-528" y="-879">e==avantA()</label><label kind="synchronisation" x="-528" y="-864">goA[e]!</label><label kind="assignment" x="-528" y="-848">defilerA(),
nombreDautosPassees += 1</label><nail x="-408" y="-840"/><nail x="-408" y="-960"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="select" x="-320" y="-950">e:idVoitureA</label><label kind="guard" x="-320" y="-936">longueurFileA&gt;0 &amp;&amp; e==avantA() &amp;&amp; 
nombreDautosPassees &lt; NOMBRE_DAUTOS_A_PASSER &amp;&amp;
x &lt; TEMPS_MAX</label><label kind="synchronisation" x="-320" y="-888">pontDirectionA?</label><nail x="-328" y="-1008"/></transition><transition><source ref="id2"/><target ref="id2"/><label kind="select" x="-200" y="-1032">e:idVoitureA</label><label kind="synchronisation" x="-200" y="-1016">demandeA[e]?</label><label kind="assignment" x="-200" y="-1000">enfilerA(e)</label><label kind="comments">Des qu'une voiture arrive, elle entre dans la file</label><nail x="-296" y="-976"/><nail x="-208" y="-976"/><nail x="-208" y="-1024"/><nail x="-288" y="-1024"/></transition></template><template><name>VAA</name><parameter>const idVoitureA id</parameter><declaration>// Place local declarations here.</declaration><location id="id3" x="320" y="-120"><name x="280" y="-104">ApresTraverse</name></location><location id="id4" x="128" y="-160"><name x="144" y="-176">SurPont</name></location><location id="id5" x="-48" y="-120"><name x="-72" y="-160">Depart</name><committed/></location><location id="id6" x="-176" y="-120"><name x="-200" y="-160">Attente</name></location><location id="id7" x="-344" y="-120"><name x="-376" y="-104">Approche</name></location><init ref="id7"/><transition><source ref="id3"/><target ref="id7"/><nail x="320" y="-192"/><nail x="-344" y="-192"/></transition><transition><source ref="id4"/><target ref="id3"/><label kind="synchronisation" x="184" y="-144">voitureQuitterPont!</label><nail x="184" y="-120"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="0" y="-152">voitureSurPont!</label><nail x="0" y="-160"/></transition><transition><source ref="id6"/><target ref="id5"/><label kind="synchronisation" x="-136" y="-112">goA[id]?</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="-296" y="-112">demandeA[id]!</label></transition></template><template><name>VAB</name><parameter>const idVoitureB id</parameter><declaration>// Place local declarations here.</declaration><location id="id8" x="-360" y="-48"><name x="-400" y="-32">ApresTraverse</name></location><location id="id9" x="-192" y="-80"><name x="-216" y="-64">SurPont</name></location><location id="id10" x="-16" y="-48"><name x="-32" y="-88">Depart</name><committed/></location><location id="id11" x="120" y="-48"><name x="96" y="-88">Attente</name></location><location id="id12" x="272" y="-48"><name x="256" y="-32">Approche</name></location><init ref="id12"/><transition><source ref="id8"/><target ref="id12"/><nail x="-360" y="-128"/><nail x="272" y="-128"/></transition><transition><source ref="id9"/><target ref="id8"/><label kind="synchronisation" x="-344" y="-72">voitureQuitterPont!</label><nail x="-240" y="-48"/></transition><transition><source ref="id10"/><target ref="id9"/><label kind="synchronisation" x="-144" y="-80">voitureSurPont!</label><nail x="-56" y="-80"/></transition><transition><source ref="id11"/><target ref="id10"/><label kind="synchronisation" x="32" y="-40">goB[id]?</label></transition><transition><source ref="id12"/><target ref="id11"/><label kind="synchronisation" x="152" y="-40">demandeB[id]!</label></transition></template><template><name>P</name><declaration>// Place local declarations here.

const int CAPACITE_PONT = 3; // nombre de voitures pouvant etre sur le pont (not implemented)

// nombre de voitures A sur le pont
// int[0,CAPACITE_PONT] nbASurPont;
// int[0,CAPACITE_PONT] nbBSurPont;

int[0,CAPACITE_PONT] nbSurPont;

</declaration><location id="id13" x="0" y="-32"></location><location id="id14" x="48" y="-64"></location><location id="id15" x="176" y="112"><name x="192" y="88">DirectionB</name></location><location id="id16" x="-136" y="-200"><name x="-224" y="-200">DirectionA</name></location><init ref="id16"/><transition><source ref="id13"/><target ref="id13"/><label kind="guard" x="-232" y="-39">nbSurPont &gt; 0</label><label kind="synchronisation" x="-232" y="-24">voitureQuitterPont?</label><label kind="assignment" x="-232" y="-9">nbSurPont -= 1</label><nail x="-104" y="-32"/><nail x="-104" y="8"/><nail x="-16" y="8"/><nail x="-16" y="-16"/></transition><transition><source ref="id14"/><target ref="id14"/><label kind="guard" x="184" y="-142">nbSurPont &gt; 0</label><label kind="synchronisation" x="184" y="-127">voitureQuitterPont?</label><label kind="assignment" x="184" y="-112">nbSurPont -= 1</label><nail x="48" y="-136"/><nail x="176" y="-136"/><nail x="176" y="-88"/><nail x="64" y="-88"/></transition><transition><source ref="id15"/><target ref="id15"/><label kind="synchronisation" x="288" y="40">voitureQuitterPont?</label><label kind="assignment" x="288" y="55">nbSurPont -= 1</label><nail x="176" y="32"/><nail x="280" y="32"/><nail x="280" y="80"/><nail x="192" y="80"/></transition><transition><source ref="id16"/><target ref="id16"/><label kind="synchronisation" x="-360" y="-160">voitureQuitterPont?</label><label kind="assignment" x="-360" y="-145">nbSurPont -= 1</label><nail x="-136" y="-136"/><nail x="-232" y="-136"/><nail x="-232" y="-168"/><nail x="-160" y="-168"/></transition><transition><source ref="id13"/><target ref="id16"/><label kind="guard" x="-144" y="-88">nbSurPont == 0</label></transition><transition><source ref="id15"/><target ref="id13"/><label kind="synchronisation" x="-48" y="40">changerDirection?</label></transition><transition><source ref="id14"/><target ref="id15"/><label kind="guard" x="96" y="-24">nbSurPont == 0</label></transition><transition><source ref="id16"/><target ref="id14"/><label kind="synchronisation" x="-64" y="-168">changerDirection?</label></transition><transition><source ref="id15"/><target ref="id15"/><label kind="synchronisation" x="-48" y="136">voitureSurPont?</label><label kind="assignment" x="-48" y="152">nbSurPont += 1</label><nail x="72" y="112"/><nail x="72" y="176"/><nail x="152" y="176"/><nail x="152" y="136"/></transition><transition><source ref="id16"/><target ref="id16"/><label kind="synchronisation" x="-104" y="-312">voitureSurPont?</label><label kind="assignment" x="-104" y="-296">nbSurPont += 1</label><nail x="-32" y="-200"/><nail x="-32" y="-272"/><nail x="-112" y="-272"/><nail x="-112" y="-216"/></transition><transition><source ref="id15"/><target ref="id15"/><label kind="guard" x="280" y="120">nbSurPont &lt;= CAPACITE_PONT</label><label kind="synchronisation" x="280" y="136">pontDirectionB!</label><nail x="272" y="112"/><nail x="272" y="176"/><nail x="200" y="176"/><nail x="192" y="128"/></transition><transition><source ref="id16"/><target ref="id16"/><label kind="guard" x="-352" y="-296">nbSurPont &lt;= CAPACITE_PONT</label><label kind="synchronisation" x="-352" y="-280">pontDirectionA!</label><nail x="-236" y="-201"/><nail x="-232" y="-264"/><nail x="-152" y="-264"/><nail x="-156" y="-217"/></transition></template><system>// Place template instantiations here.
// Process = CRTLP();

// List one or more processes to be composed into a system.
system VAA, VAB, CRTLP, P;</system></nta>