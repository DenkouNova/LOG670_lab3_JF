<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

const int NVAA = 2;         // nombre de voitures du cote A (direction -&gt;)
const int NVAB = 2;         // nombre de voitures du cote B (direction &lt;-)
const int NVAPA = 1;         // nombre de voitures prioritaires du cote A (direction -&gt;)
const int NVAPB = 1;         // nombre de voitures prioritaires du cote B (direction &lt;-)

typedef int[0, NVAA-1] idVoitureA;
typedef int[0, NVAB-1] idVoitureB;
typedef int[0, NVAPA-1] idVoiturePA;
typedef int[0, NVAPB-1] idVoiturePB;

chan demandeA[NVAA], demandeB[NVAB], goA[NVAA], goB[NVAB];
chan demandePA[NVAPA], demandePB[NVAPB], goPA[NVAPA], goPB[NVAPB];
chan pontDirectionA, pontDirectionB, changerDirection, voitureSurPont, voitureQuitterPont;

clock x;

const int NOMBRE_DAUTOS_A_PASSER = 20; // apres ce nombre de voitures on change de direction
const int TEMPS_MAX  = 10; // apres ce nombre de ticks on change de direction
const int TEMPS_TRAVERSE_PONT = 3; // temps requis pour traverser le pont

int temps_restant_avant_changement = TEMPS_MAX;</declaration><template><name x="5" y="5">CRTLP</name><declaration>// Place local declarations here.

int nombreDautosPassees = 0;

// =========================================
// || declarations pour voiture A         ||
// =========================================

idVoitureA listeVoituresA[NVAA+1];
int[0,NVAA] longueurFileA;

// Placer element a la fin de la file A
void enfilerA(idVoitureA element)
{
        listeVoituresA[longueurFileA++] = element;
}

// Enlever le premier element de la file
void defilerA()
{
        int i = 0;
        longueurFileA -= 1;
        while (i &lt; longueurFileA)
        {
                listeVoituresA[i] = listeVoituresA[i + 1];
                i++;
        }
        listeVoituresA[i] = 0;
}

// Retourne le premier element de la file A
idVoitureA avantA()
{
   return listeVoituresA[0];
}

// Retourne le dernier element de la file A
idVoitureA arriereA()
{
   return listeVoituresA[longueurFileA - 1];
}



// =========================================
// || declarations pour voiture B         ||
// =========================================

// declarations pour voiture B
idVoitureB listeVoituresB[NVAB+1];
int[0,NVAB] longueurFileB;

// Placer element a la fin de la file B
void enfilerB(idVoitureB element)
{
        listeVoituresB[longueurFileB++] = element;
}

// Enlever le premier element de la file
void defilerB()
{
        int i = 0;
        longueurFileB -= 1;
        while (i &lt; longueurFileB)
        {
                listeVoituresB[i] = listeVoituresB[i + 1];
                i++;
        }
        listeVoituresB[i] = 0;
}

// Retourne le premier element de la file B
idVoitureB avantB()
{
   return listeVoituresB[0];
}

// Retourne le dernier element de la file B
idVoitureB arriereB()
{
   return listeVoituresB[longueurFileB - 1];
}

















// =============================================
// || declarations pour voiture prioritaire A ||
// =============================================

idVoitureA listeVoituresPA[NVAPA];
int[0,NVAPA] longueurFilePA;

// Placer element a la fin de la file PA
void enfilerPA(idVoitureA element)
{
        listeVoituresPA[longueurFilePA++] = element;
}

// Enlever le premier element de la file
void defilerPA()
{
        int i = 0;
        longueurFilePA -= 1;
        while (i &lt; longueurFilePA)
        {
                listeVoituresPA[i] = listeVoituresPA[i + 1];
                i++;
        }
        listeVoituresPA[i] = 0;
}

// Retourne le premier element de la file PA
idVoitureA avantPA()
{
   return listeVoituresPA[0];
}

// Retourne le dernier element de la file PA
idVoitureA arrierePA()
{
   return listeVoituresPA[longueurFilePA - 1];
}



// =============================================
// || declarations pour voiture prioritaire B ||
// =============================================

idVoitureB listeVoituresPB[NVAPB];
int[0,NVAPB] longueurFilePB;

// Placer element a la fin de la file PB
void enfilerPB(idVoitureB element)
{
        listeVoituresPB[longueurFilePB++] = element;
}

// Enlever le premier element de la file
void defilerPB()
{
        int i = 0;
        longueurFilePB -= 1;
        while (i &lt; longueurFilePB)
        {
                listeVoituresPB[i] = listeVoituresPB[i + 1];
                i++;
        }
        listeVoituresPB[i] = 0;
}

// Retourne le premier element de la file PB
idVoitureB avantPB()
{
   return listeVoituresPB[0];
}

// Retourne le dernier element de la file PB
idVoitureB arrierePB()
{
   return listeVoituresPB[longueurFilePB - 1];
}





</declaration><location id="id0" x="-1064" y="-1024"><name x="-1152" y="-1032">EnvoyerPA</name><committed/></location><location id="id1" x="-1008" y="-1312"><name x="-1104" y="-1320">EnvoyerPB</name><committed/></location><location id="id2" x="-800" y="-1600"><name x="-880" y="-1608">EnvoyerB</name><committed/></location><location id="id3" x="-736" y="-1448"><name x="-704" y="-1480">DirectionB</name><label kind="invariant" x="-704" y="-1464">nombreDautosPassees &lt;= NOMBRE_DAUTOS_A_PASSER &amp;&amp;
x &lt; TEMPS_MAX</label></location><location id="id4" x="-808" y="-752"><name x="-888" y="-760">EnvoyerA</name><committed/></location><location id="id5" x="-744" y="-888"><name x="-704" y="-920">DirectionA</name><label kind="invariant" x="-704" y="-904">nombreDautosPassees &lt;= NOMBRE_DAUTOS_A_PASSER &amp;&amp;
x &lt; TEMPS_MAX</label></location><init ref="id5"/><transition><source ref="id0"/><target ref="id5"/><label kind="select" x="-1248" y="-990">e:idVoiturePA</label><label kind="guard" x="-1248" y="-975">e==avantPA()</label><label kind="synchronisation" x="-1248" y="-960">goPA[e]!</label><label kind="assignment" x="-1248" y="-945">defilerPA(),
x := 0</label><nail x="-1064" y="-888"/></transition><transition><source ref="id5"/><target ref="id0"/><label kind="select" x="-1032" y="-1080">e:idVoiturePA</label><label kind="guard" x="-1032" y="-1064">longueurFilePA&gt;0 &amp;&amp; e==avantPA()</label><label kind="synchronisation" x="-1024" y="-1048">pontDirectionA?</label><nail x="-880" y="-1024"/></transition><transition><source ref="id1"/><target ref="id3"/><label kind="select" x="-1112" y="-1431">e:idVoiturePB</label><label kind="guard" x="-1112" y="-1416">e==avantPB()</label><label kind="synchronisation" x="-1112" y="-1401">goPB[e]!</label><label kind="assignment" x="-1112" y="-1386">defilerPB(),
x := 0</label><nail x="-1008" y="-1448"/></transition><transition><source ref="id3"/><target ref="id1"/><label kind="select" x="-992" y="-1304">e:idVoiturePB</label><label kind="guard" x="-992" y="-1288">longueurFilePB&gt;0 &amp;&amp; e==avantPB()</label><label kind="synchronisation" x="-992" y="-1272">pontDirectionB?</label><nail x="-872" y="-1312"/></transition><transition><source ref="id5"/><target ref="id5"/><label kind="select" x="-584" y="-1064">e:idVoiturePB</label><label kind="guard" x="-584" y="-1048">longueurFilePB &lt; NVAPB</label><label kind="synchronisation" x="-584" y="-1032">demandePB[e]?</label><label kind="assignment" x="-584" y="-1016">enfilerPB(e)</label><nail x="-704" y="-1000"/><nail x="-592" y="-1000"/><nail x="-592" y="-1056"/><nail x="-704" y="-1056"/></transition><transition><source ref="id5"/><target ref="id5"/><label kind="select" x="-584" y="-992">e:idVoiturePA</label><label kind="guard" x="-584" y="-976">longueurFilePA &lt; NVAPA</label><label kind="synchronisation" x="-584" y="-960">demandePA[e]?</label><label kind="assignment" x="-584" y="-944">enfilerPA(e)</label><nail x="-704" y="-936"/><nail x="-592" y="-936"/><nail x="-592" y="-984"/><nail x="-704" y="-984"/></transition><transition><source ref="id3"/><target ref="id3"/><label kind="select" x="-576" y="-1312">e:idVoiturePA</label><label kind="guard" x="-576" y="-1296">longueurFilePA &lt; NVAPA</label><label kind="synchronisation" x="-576" y="-1280">demandePA[e]?</label><label kind="assignment" x="-576" y="-1264">enfilerPA(e)</label><nail x="-688" y="-1304"/><nail x="-584" y="-1304"/><nail x="-584" y="-1256"/><nail x="-688" y="-1256"/></transition><transition><source ref="id3"/><target ref="id3"/><label kind="select" x="-576" y="-1392">e:idVoiturePB</label><label kind="guard" x="-576" y="-1376">longueurFilePB &lt; NVAPB</label><label kind="synchronisation" x="-576" y="-1360">demandePB[e]?</label><label kind="assignment" x="-576" y="-1344">enfilerPB(e)</label><nail x="-696" y="-1384"/><nail x="-584" y="-1384"/><nail x="-584" y="-1336"/><nail x="-696" y="-1336"/></transition><transition><source ref="id3"/><target ref="id5"/><label kind="guard" x="-1232" y="-1224">nombreDautosPassees &gt;= NOMBRE_DAUTOS_A_PASSER ||
(longueurFileB == 0 &amp;&amp; x &gt;= temps_restant_avant_changement) ||
(longueurFilePA &gt; 0 &amp;&amp; longueurFilePB == 0)</label><label kind="synchronisation" x="-1232" y="-1176">changerDirection!</label><label kind="assignment" x="-1232" y="-1160">nombreDautosPassees := 0,
x := 0,
temps_restant_avant_changement := TEMPS_MAX</label><nail x="-760" y="-1232"/><nail x="-808" y="-1232"/><nail x="-808" y="-1080"/><nail x="-760" y="-1080"/></transition><transition><source ref="id5"/><target ref="id3"/><label kind="guard" x="-680" y="-1200">nombreDautosPassees &gt;= NOMBRE_DAUTOS_A_PASSER ||
(longueurFileA == 0 &amp;&amp; x &gt;= temps_restant_avant_changement) ||
(longueurFilePB &gt; 0 &amp;&amp; longueurFilePA == 0)</label><label kind="synchronisation" x="-680" y="-1152">changerDirection!</label><label kind="assignment" x="-680" y="-1136">nombreDautosPassees := 0,
x := 0,
temps_restant_avant_changement := TEMPS_MAX</label><nail x="-736" y="-1080"/><nail x="-688" y="-1080"/><nail x="-688" y="-1232"/><nail x="-736" y="-1232"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="select" x="-888" y="-1560">e:idVoitureB</label><label kind="guard" x="-888" y="-1544">e==avantB()</label><label kind="synchronisation" x="-856" y="-1528">goB[e]!</label><label kind="assignment" x="-992" y="-1520">defilerB(),
nombreDautosPassees += 1</label><nail x="-800" y="-1504"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-1200" y="-1704">e:idVoitureB</label><label kind="guard" x="-1200" y="-1688">longueurFileB&gt;0 &amp;&amp; e==avantB() &amp;&amp; 
nombreDautosPassees &lt; NOMBRE_DAUTOS_A_PASSER &amp;&amp;
x &lt;= TEMPS_MAX &amp;&amp;
longueurFilePA + longueurFilePB == 0</label><label kind="synchronisation" x="-1200" y="-1624">pontDirectionB?</label><nail x="-736" y="-1704"/><nail x="-800" y="-1704"/></transition><transition><source ref="id3"/><target ref="id3"/><label kind="select" x="-568" y="-1552">e:idVoitureB</label><label kind="guard" x="-568" y="-1536">longueurFileB &lt; NVAB</label><label kind="synchronisation" x="-568" y="-1520">demandeB[e]?</label><label kind="assignment" x="-568" y="-1504">enfilerB(e)</label><nail x="-704" y="-1496"/><nail x="-576" y="-1496"/><nail x="-576" y="-1544"/><nail x="-696" y="-1544"/></transition><transition><source ref="id3"/><target ref="id3"/><label kind="select" x="-568" y="-1632">e:idVoitureA</label><label kind="guard" x="-568" y="-1616">longueurFileA &lt; NVAA</label><label kind="synchronisation" x="-568" y="-1600">demandeA[e]?</label><label kind="assignment" x="-568" y="-1584">enfilerA(e)</label><nail x="-696" y="-1568"/><nail x="-576" y="-1568"/><nail x="-576" y="-1624"/><nail x="-696" y="-1624"/></transition><transition><source ref="id5"/><target ref="id5"/><label kind="select" x="-576" y="-760">e:idVoitureB</label><label kind="guard" x="-576" y="-744">longueurFileB &lt; NVAB</label><label kind="synchronisation" x="-576" y="-728">demandeB[e]?</label><label kind="assignment" x="-576" y="-712">enfilerB(e)</label><nail x="-712" y="-752"/><nail x="-584" y="-752"/><nail x="-584" y="-704"/><nail x="-712" y="-704"/></transition><transition><source ref="id4"/><target ref="id5"/><label kind="select" x="-992" y="-856">e:idVoitureA</label><label kind="guard" x="-992" y="-840">e==avantA()</label><label kind="synchronisation" x="-992" y="-824">goA[e]!</label><label kind="assignment" x="-992" y="-800">defilerA(),
nombreDautosPassees += 1</label><nail x="-808" y="-856"/></transition><transition><source ref="id5"/><target ref="id5"/><label kind="select" x="-576" y="-840">e:idVoitureA</label><label kind="guard" x="-576" y="-824">longueurFileA &lt; NVAA</label><label kind="synchronisation" x="-576" y="-808">demandeA[e]?</label><label kind="assignment" x="-576" y="-792">enfilerA(e)</label><nail x="-712" y="-824"/><nail x="-584" y="-824"/><nail x="-584" y="-784"/><nail x="-712" y="-784"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="select" x="-1216" y="-752">e:idVoitureA</label><label kind="guard" x="-1216" y="-736">longueurFileA&gt;0 &amp;&amp; e==avantA() &amp;&amp; 
nombreDautosPassees &lt; NOMBRE_DAUTOS_A_PASSER &amp;&amp;
x &lt;= TEMPS_MAX &amp;&amp;
longueurFilePA + longueurFilePB == 0</label><label kind="synchronisation" x="-1216" y="-672">pontDirectionA?</label><nail x="-744" y="-656"/><nail x="-808" y="-656"/></transition></template><template><name>VAA</name><parameter>const idVoitureA id</parameter><declaration>
bool crossing;
clock horlogeTraverse;</declaration><location id="id6" x="304" y="-120"><name x="264" y="-168">ApresTraverse</name></location><location id="id7" x="128" y="-160"><name x="144" y="-176">SurPont</name></location><location id="id8" x="-48" y="-120"><name x="-72" y="-160">Depart</name><committed/></location><location id="id9" x="-176" y="-120"><name x="-200" y="-160">Attente</name></location><location id="id10" x="-344" y="-120"><name x="-384" y="-104">QuelquePart</name></location><init ref="id10"/><transition><source ref="id6"/><target ref="id10"/><nail x="304" y="-144"/><nail x="256" y="-144"/><nail x="256" y="-192"/><nail x="-344" y="-192"/></transition><transition><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="160" y="-112">voitureQuitterPont!</label><label kind="assignment" x="-16" y="-96">temps_restant_avant_changement -= TEMPS_TRAVERSE_PONT,
crossing := 0</label><nail x="184" y="-120"/></transition><transition><source ref="id8"/><target ref="id7"/><label kind="synchronisation" x="8" y="-152">voitureSurPont!</label><nail x="0" y="-160"/></transition><transition><source ref="id9"/><target ref="id8"/><label kind="synchronisation" x="-136" y="-112">goA[id]?</label></transition><transition><source ref="id10"/><target ref="id9"/><label kind="synchronisation" x="-288" y="-112">demandeA[id]!</label><label kind="assignment" x="-288" y="-96">horlogeTraverse := 0,
crossing := 1</label></transition></template><template><name>VAB</name><parameter>const idVoitureB id</parameter><declaration>
bool crossing;
clock horlogeTraverse;</declaration><location id="id11" x="-400" y="-48"><name x="-456" y="-96">ApresTraverse</name></location><location id="id12" x="-240" y="-80"><name x="-264" y="-64">SurPont</name></location><location id="id13" x="-16" y="-48"><name x="-32" y="-88">Depart</name><committed/></location><location id="id14" x="120" y="-48"><name x="96" y="-88">Attente</name></location><location id="id15" x="272" y="-48"><name x="256" y="-32">QuelquePart</name></location><init ref="id15"/><transition><source ref="id11"/><target ref="id15"/><nail x="-400" y="-72"/><nail x="-352" y="-72"/><nail x="-352" y="-128"/><nail x="272" y="-128"/></transition><transition><source ref="id12"/><target ref="id11"/><label kind="synchronisation" x="-384" y="-40">voitureQuitterPont!</label><label kind="assignment" x="-448" y="-24">temps_restant_avant_changement -= TEMPS_TRAVERSE_PONT,
crossing := 0</label><nail x="-288" y="-48"/></transition><transition><source ref="id13"/><target ref="id12"/><label kind="synchronisation" x="-168" y="-72">voitureSurPont!</label><nail x="-56" y="-80"/></transition><transition><source ref="id14"/><target ref="id13"/><label kind="synchronisation" x="32" y="-40">goB[id]?</label></transition><transition><source ref="id15"/><target ref="id14"/><label kind="synchronisation" x="152" y="-40">demandeB[id]!</label><label kind="assignment" x="112" y="-24">horlogeTraverse := 0,
crossing := 1</label></transition></template><template><name>P</name><declaration>// Place local declarations here.

const int CAPACITE_PONT = 3; // nombre de voitures pouvant etre sur le pont (not implemented)

int[0,CAPACITE_PONT+1] nbSurPont;

</declaration><location id="id16" x="0" y="-32"></location><location id="id17" x="48" y="-64"></location><location id="id18" x="176" y="112"><name x="192" y="88">DirectionB</name></location><location id="id19" x="-136" y="-200"><name x="-224" y="-200">DirectionA</name></location><init ref="id19"/><transition><source ref="id16"/><target ref="id16"/><label kind="guard" x="-232" y="-39">nbSurPont &gt; 0</label><label kind="synchronisation" x="-232" y="-24">voitureQuitterPont?</label><label kind="assignment" x="-232" y="-9">nbSurPont -= 1</label><nail x="-104" y="-32"/><nail x="-104" y="8"/><nail x="-16" y="8"/><nail x="-16" y="-16"/></transition><transition><source ref="id17"/><target ref="id17"/><label kind="guard" x="184" y="-142">nbSurPont &gt; 0</label><label kind="synchronisation" x="184" y="-127">voitureQuitterPont?</label><label kind="assignment" x="184" y="-112">nbSurPont -= 1</label><nail x="48" y="-136"/><nail x="176" y="-136"/><nail x="176" y="-88"/><nail x="64" y="-88"/></transition><transition><source ref="id18"/><target ref="id18"/><label kind="synchronisation" x="288" y="40">voitureQuitterPont?</label><label kind="assignment" x="288" y="55">nbSurPont -= 1</label><nail x="176" y="32"/><nail x="280" y="32"/><nail x="280" y="80"/><nail x="192" y="80"/></transition><transition><source ref="id19"/><target ref="id19"/><label kind="synchronisation" x="-360" y="-160">voitureQuitterPont?</label><label kind="assignment" x="-360" y="-145">nbSurPont -= 1</label><nail x="-136" y="-136"/><nail x="-232" y="-136"/><nail x="-232" y="-168"/><nail x="-160" y="-168"/></transition><transition><source ref="id16"/><target ref="id19"/><label kind="guard" x="-144" y="-88">nbSurPont == 0</label></transition><transition><source ref="id18"/><target ref="id16"/><label kind="synchronisation" x="-48" y="40">changerDirection?</label></transition><transition><source ref="id17"/><target ref="id18"/><label kind="guard" x="96" y="-24">nbSurPont == 0</label></transition><transition><source ref="id19"/><target ref="id17"/><label kind="synchronisation" x="-64" y="-168">changerDirection?</label></transition><transition><source ref="id18"/><target ref="id18"/><label kind="synchronisation" x="-48" y="136">voitureSurPont?</label><label kind="assignment" x="-48" y="152">nbSurPont += 1</label><nail x="72" y="112"/><nail x="72" y="176"/><nail x="152" y="176"/><nail x="152" y="136"/></transition><transition><source ref="id19"/><target ref="id19"/><label kind="synchronisation" x="-104" y="-312">voitureSurPont?</label><label kind="assignment" x="-104" y="-296">nbSurPont += 1</label><nail x="-32" y="-200"/><nail x="-32" y="-272"/><nail x="-112" y="-272"/><nail x="-112" y="-216"/></transition><transition><source ref="id18"/><target ref="id18"/><label kind="guard" x="280" y="120">nbSurPont &lt;= CAPACITE_PONT</label><label kind="synchronisation" x="280" y="136">pontDirectionB!</label><nail x="272" y="112"/><nail x="272" y="176"/><nail x="200" y="176"/><nail x="192" y="128"/></transition><transition><source ref="id19"/><target ref="id19"/><label kind="guard" x="-352" y="-296">nbSurPont &lt;= CAPACITE_PONT</label><label kind="synchronisation" x="-352" y="-280">pontDirectionA!</label><nail x="-236" y="-201"/><nail x="-232" y="-264"/><nail x="-152" y="-264"/><nail x="-156" y="-217"/></transition></template><template><name>VAPA</name><parameter>const idVoiturePA id</parameter><location id="id20" x="272" y="152"><name x="152" y="128">ApresTraverse</name></location><location id="id21" x="104" y="104"><name x="94" y="74">SurPont</name></location><location id="id22" x="-80" y="152"><name x="-104" y="112">Depart</name><committed/></location><location id="id23" x="-240" y="152"><name x="-264" y="112">Attente</name></location><location id="id24" x="-408" y="152"><name x="-456" y="168">QuelquePart</name></location><init ref="id24"/><transition><source ref="id20"/><target ref="id24"/><label kind="guard" x="-128" y="24">x == TEMPS_MAX</label><nail x="272" y="48"/><nail x="-408" y="48"/></transition><transition><source ref="id21"/><target ref="id20"/><label kind="synchronisation" x="128" y="152">voitureQuitterPont!</label><label kind="assignment" x="-128" y="168">temps_restant_avant_changement -= TEMPS_TRAVERSE_PONT</label><nail x="152" y="152"/></transition><transition><source ref="id22"/><target ref="id21"/><label kind="synchronisation" x="-24" y="112">voitureSurPont!</label><nail x="-24" y="104"/></transition><transition><source ref="id23"/><target ref="id22"/><label kind="synchronisation" x="-192" y="160">goPA[id]?</label></transition><transition><source ref="id24"/><target ref="id23"/><label kind="synchronisation" x="-368" y="160">demandePA[id]!</label></transition></template><template><name>VAPB</name><parameter>const idVoiturePB id</parameter><location id="id25" x="-328" y="160"><name x="-296" y="136">ApresTraverse</name></location><location id="id26" x="-120" y="120"><name x="-144" y="136">SurPont</name></location><location id="id27" x="88" y="160"><name x="72" y="120">Depart</name><committed/></location><location id="id28" x="232" y="160"><name x="208" y="128">Attente</name></location><location id="id29" x="384" y="160"><name x="376" y="176">QuelquePart</name></location><init ref="id29"/><transition><source ref="id25"/><target ref="id29"/><label kind="guard" x="-16" y="48">x == TEMPS_MAX</label><nail x="-328" y="72"/><nail x="384" y="72"/></transition><transition><source ref="id26"/><target ref="id25"/><label kind="synchronisation" x="-304" y="168">voitureQuitterPont!</label><label kind="assignment" x="-336" y="184">temps_restant_avant_changement -= TEMPS_TRAVERSE_PONT</label><nail x="-176" y="160"/></transition><transition><source ref="id27"/><target ref="id26"/><label kind="synchronisation" x="-76" y="125">voitureSurPont!</label><nail x="40" y="120"/></transition><transition><source ref="id28"/><target ref="id27"/><label kind="synchronisation" x="128" y="168">goPB[id]?</label></transition><transition><source ref="id29"/><target ref="id28"/><label kind="synchronisation" x="264" y="168">demandePB[id]!</label></transition></template><system>// Place template instantiations here.
// Process = CRTLP();

// List one or more processes to be composed into a system.
system VAA, VAB, VAPA, VAPB, CRTLP, P;</system></nta>